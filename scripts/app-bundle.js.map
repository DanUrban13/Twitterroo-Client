{"version":3,"sources":["src/app.js","src/environment.js","src/home.js","src/main.js","src/resources/index.js","src/services/async-http-client.js","src/services/fixtures.js","src/services/messages.js","src/services/twitterservice.js","src/viewmodels/dashboard/dashboard.js","src/viewmodels/friendsTimeline/friendsTimeline.js","src/viewmodels/globalTimeline/globalTimeline.js","src/viewmodels/login/login.js","src/viewmodels/logout/logout.js","src/viewmodels/personalTweetlist/personalTweetlist.js","src/viewmodels/settings/settings.js","src/viewmodels/signup/signup.js","src/viewmodels/tweet/tweet.js","src/viewmodels/userlist/userlist.js"],"names":["App","ts","au","ea","subscribe","msg","status","success","setRoot","then","router","navigateToRoute","configureRouter","config","map","route","name","moduleId","nav","title","debug","testing","Home","aurelia","mapUnknownRoutes","configure","use","standardConfiguration","feature","plugin","moduleName","developmentLogging","start","AsyncHttpClient","httpClient","fixtures","http","withBaseUrl","baseUrl","get","url","post","obj","put","delete","authenticate","user","response","content","localStorage","donation","JSON","stringify","configuration","withHeader","token","publish","catch","message","clearAuthentication","Fixtures","TotalUpdate","total","LoginStatus","TwitterService","data","ac","tweets","users","currentUser","id","email","getTweets","getUsers","res","tweet","text","returnedTweet","push","getUserData","i","length","getMyTweets","s","_id","creator","getFriendsTweets","j","following","settings","firstName","lastName","password","newUser","register","login","logout","Dashboard","FriendsTweetlist","twitterService","GlobalTimeline","Login","prompt","e","console","log","Logout","PersonalTweetlist","Settings","edit","Signup","showSignup","Tweet","Userlist","h","users1","users2","userCount","slice","test"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject, Aurelia} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './services/messages';\nimport TwitterService from './services/twitterservice';\n\n@inject(TwitterService, Aurelia, EventAggregator)\nexport class App {\n\n  constructor(ts, au, ea) {\n    this.au = au;\n    this.ts = ts;\n    ea.subscribe(LoginStatus, msg => {\n      if (msg.status.success === true) {\n        au.setRoot('home').then(() => {\n          this.router.navigateToRoute('dashboard');\n        });\n      } else {\n        au.setRoot('app').then(() => {\n          this.router.navigateToRoute('login');\n        });\n      }\n    });\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'login'], name: 'login', moduleId: 'viewmodels/login/login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'viewmodels/signup/signup', nav: true, title: 'Signup' }\n    ]);\n    this.router = router;\n  }\n\n  // attached() {\n  //   if (this.ts.isAuthenticated()) {\n  //     this.au.setRoot('home').then(() => {\n  //       this.router.navigateToRoute('dashboard');\n  //     });\n  //   }\n  // }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { inject, Aurelia } from 'aurelia-framework';\n\n@inject(Aurelia)\nexport default class Home {\n\n  constructor(au) {\n    this.aurelia = au;\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'home'], name: 'dashboard', moduleId: 'viewmodels/dashboard/dashboard', nav: true, title: 'Dashboard' },\n      { route: 'tweet', name: 'tweet', moduleId: 'viewmodels/tweet/tweet', nav: true, title: 'Tweet' },\n      { route: 'friendsTimeline', name: 'friendsTimeline', moduleId: 'viewmodels/friendsTimeline/friendsTimeline', nav: true, title: 'Friends Timeline' },\n      { route: 'globalTimeline', name: 'globalTimeline', moduleId: 'viewmodels/globalTimeline/globalTimeline', nav: true, title: 'Global Timeline' },\n      { route: 'userlist', name: 'userlist', moduleId: 'viewmodels/userlist/userlist', nav: true, title: 'Userlist' },\n      { route: 'settings', name: 'settings', moduleId: 'viewmodels/settings/settings', nav: true, title: 'Settings' },\n      { route: 'logout', name: 'logout', moduleId: 'viewmodels/logout/logout', nav: true, title: 'Logout' }\n    ]);\n    this.router = router;\n\n    config.mapUnknownRoutes(instruction => {\n      return 'home';\n    });\n  }\n}\n","import environment from './environment';\nimport {PLATFORM} from 'aurelia-pal';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin(PLATFORM.moduleName('aurelia-dialog'));\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport Fixtures from './fixtures';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './messages';\nimport TwitterService from './twitterservice';\n\n@inject(HttpClient, Fixtures, EventAggregator, TwitterService )\nexport default class AsyncHttpClient {\n\n  constructor(httpClient, fixtures, ea, ts) {\n    this.http = httpClient;\n    this.http.configure(http => {\n      http.withBaseUrl(fixtures.baseUrl);\n    });\n    this.ea = ea;\n    this.ts = ts;\n  }\n\n  get(url) {\n    return this.http.get(url);\n  }\n\n  post(url, obj) {\n    return this.http.post(url, obj);\n  }\n\n  put(url, obj) {\n    return this.http.put(url, obj);\n  }\n\n  delete(url) {\n    return this.http.delete(url);\n  }\n\n  authenticate(url, user) {\n    this.http.post(url, user).then(response => {\n      const status = response.content;\n      if (status.success) {\n        localStorage.donation = JSON.stringify(response.content);\n        this.http.configure(configuration => {\n          configuration.withHeader('Authorization', 'bearer ' + response.content.token);\n        });\n      }\n      this.ea.publish(new LoginStatus(status));\n    }).catch(error => {\n      const status = {\n        success: false,\n        message: 'service not avilable'\n      };\n      this.ea.publish(new LoginStatus(status));\n    });\n  }\n\n  clearAuthentication() {\n    localStorage.donation = null;\n    this.http.configure(configuration => {\n      configuration.withHeader('Authorization', '');\n    });\n  }\n}\n","export default class Fixtures {\n\n  baseUrl = 'https://twitterroo.herokuapp.com/';\n}\n","export class TotalUpdate {\n  constructor(total) {\n    this.total = total;\n  }\n}\n\nexport class LoginStatus {\n  constructor(status) {\n    this.status = status;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport Fixtures from './fixtures';\nimport {LoginStatus} from './messages';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport AsyncHttpClient from './async-http-client';\n\n@inject(Fixtures, EventAggregator, AsyncHttpClient)\nexport default class TwitterService {\n\n  tweets = [];\n  users = [];\n  currentUser = {\n    id: '',\n    email: 'marge@simpson.com'\n  }\n\n  constructor(data, ea, ac) {\n    this.ea = ea;\n    this.ac = ac;\n    this.getTweets();\n    this.getUsers();\n  }\n\n  getTweets() {\n    this.ac.get('/api/tweets').then(res => {\n      this.tweets = res.content;\n    });\n  }\n\n  getUsers() {\n    this.ac.get('/api/users').then(res => {\n      this.users = res.content;\n    });\n  }\n\n  tweet(text) {\n    const tweet = {\n      text: text\n    };\n    this.ac.post('/api/tweet/create', tweet).then(res => {\n      const returnedTweet = res.content;\n      this.tweets.push(returnedTweet);\n\n      // this.total = this.total + parseInt(amount, 10);\n      // console.log('Total so far ' + this.total);\n      // this.ea.publish(new TotalUpdate(this.total));\n    });\n  }\n\n  getUserData() {\n    for (let i = 0; i < this.users.length; i++){\n      if (this.users[i].email === this.currentUser.email) {\n        return this.users[i];\n      }\n    }\n  }\n\n  getMyTweets() {\n    let tweets = [];\n    for (let i = 0; i < this.tweets.length; i++) {\n      //set currentUser id\n      for (let s = 0; s < this.users.length; s++ ){\n        if (this.currentUser.email === this.users[s].email) {\n          this.currentUser.id = this.users[s]._id;\n        }\n      }\n\n      if (this.currentUser.id === this.tweets[i].creator._id) {\n        tweets.push(this.tweets[i]);\n      }\n    }\n    return tweets;\n  }\n\n  getFriendsTweets() {\n    let tweets = [];\n    let user;\n    for (let s = 0; s < this.users.length; s++ ){\n      if (this.currentUser.email === this.users[s].email) {\n        user = this.users[s];\n      }\n    }\n    for (let j = 0; j < user.following.length; j++) {\n      for (let i = 0; i < this.tweets.length; i++) {\n        if (user.following[j]._id === this.tweets[i].creator._id) {\n          tweets.push(this.tweets[i]);\n        }\n      }\n    }\n    return tweets;\n  }\n\n  settings(firstName, lastName, email, password) {\n    const newUser = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    };\n    this.ac.put('/api/users', newUser).then(res => {\n      this.getUsers();\n    });\n  }\n\n\n  register(firstName, lastName, email, password) {\n    const newUser = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    };\n    this.ac.post('/api/users', newUser).then(res => {\n      this.getUsers();\n    });\n  }\n\n  login(email, password) {\n    const user = {\n      email: email,\n      password: password\n    };\n    this.ac.authenticate('/api/users/authenticate', user);\n    this.currentUser = user;\n\n  }\n\n  logout() {\n    const status = {\n      success: false,\n      message: ''\n    };\n    this.ac.clearAuthentication();\n    this.ea.publish(new LoginStatus(status));\n  }\n}\n","export class Dashboard {\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitterservice';\n\n@inject(TwitterService)\nexport class FriendsTweetlist {\n\n  tweets = [];\n\n  constructor(ts) {\n    this.twitterService = ts;\n    this.tweets = this.twitterService.getFriendsTweets();\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitterservice';\n\n@inject(TwitterService)\nexport class GlobalTimeline {\n\n  tweets = [];\n\n  constructor(ts) {\n    this.twitterService = ts;\n    this.tweets = this.twitterService.tweets;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitterservice';\n\n@inject(TwitterService)\nexport class Login {\n\n  email = 'marge@simpson.com';\n  password = 'secret';\n\n  constructor(ts) {\n    this.twitterService = ts;\n    this.prompt = '';\n  }\n\n  login(e) {\n    console.log(`Trying to log in ${this.email}`);\n    this.twitterService.login(this.email, this.password);\n  }\n}\n","import TwitterService from '../../services/twitterservice';\nimport {inject} from 'aurelia-framework';\n\n@inject(TwitterService)\nexport class Logout {\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  logout() {\n    console.log('logging out');\n    this.twitterService.logout();\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitterservice';\n\n@inject(TwitterService)\nexport class PersonalTweetlist {\n\n  tweets = [];\n\n  constructor(ts) {\n    this.twitterService = ts;\n    this.tweets = this.twitterService.getMyTweets();\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitterservice';\n\n@inject(TwitterService)\nexport class Settings {\n\n  firstName = '';\n  lastName = '';\n  email = '';\n  password = '';\n\n  constructor(ts) {\n    this.twitterService = ts;\n    let currentUser = this.twitterService.getUserData();\n    this.firstName = currentUser.firstName;\n    this.lastName = currentUser.lastName;\n    this.email = currentUser.email;\n    this.password = currentUser.password;\n  }\n\n  edit(e) {\n    this.twitterService.settings(this.firstName, this.lastName, this.email, this.password);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitterservice';\n\n@inject(TwitterService)\nexport class Signup {\n\n  firstName = 'Marge';\n  lastName = 'Simpson';\n  email = 'marge@simpson.com';\n  password = 'secret';\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  register(e) {\n    this.showSignup = false;\n    this.twitterService.register(this.firstName, this.lastName, this.email, this.password);\n    this.twitterService.login(this.email, this.password);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitterservice';\n\n@inject(TwitterService)\nexport class Tweet {\n\n  text = '';\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  tweet(e){\n    this.twitterService.tweet(this.text);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitterservice';\nimport Home from '../../home';\n\n@inject(TwitterService, Home)\nexport class Userlist {\n  users1 = [];\n  users2 = [];\n\n  constructor(ts, h) {\n    this.twitterService = ts;\n    this.h = h;\n    let userCount = ts.users.length;\n    console.log('usercount ' + userCount);\n    this.users1 = ts.users.slice(0, userCount / 2);\n    this.users2 = ts.users.slice(userCount / 2);\n  }\n\n  test(e) {\n    console.log('test called' + e);\n    this.h.router.navigateToRoute('dashboard');\n  }\n}\n"],"sourceRoot":".."}